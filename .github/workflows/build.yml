name: Build and Release Qt App

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  #
  # Linux build
  #
  linux-build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up Qt
      uses: jurplel/install-qt-action@v3
      with:
        version: 6.2.*

    - name: Install dependencies
      if: matrix.os == 'ubuntu-latest'
      run: sudo apt-get install -y build-essential

    - name: Configure and build
      run: |
        mkdir build
        cd build
        qmake .. CONFIG+=release
        make

    - name: Archive artifacts
      id: upload-artifacts-linux
      uses: actions/upload-artifact@v4
      with:
        name: "Linux Build"
        path: build

    - name: Display artifacts path
      run: echo "Artifacts uploaded to ${{ steps.upload-artifacts-linux.outputs.artifact_path }}"

  #
  # Windows build
  #
  build-windows:
    runs-on: windows-latest
    steps:
      - name: Checkout repository and submodules
        uses: actions/checkout@v4
        with:
          submodules: recursive
      
      - name: Configure MSVC
        uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: x64
          spectre: true

      - name: Install Qt
        uses: jurplel/install-qt-action@v3
 
      - name: Compile
        run: |
             qmake Path-Finding-Algorithm-Visualizer.pro CONFIG+=release
             nmake
             
      - name: Archive artifacts
        id: upload-artifacts-windows
        uses: actions/upload-artifact@v4
        with:
          name: "Windows Build"
          path: release

      - name: Display artifacts path
        run: echo "Artifacts uploaded to ${{ steps.upload-artifacts-windows.outputs.artifact_path }}"

  #
  # Release
  #
  release:
    needs: [linux-build, build-windows]
    runs-on: ubuntu-latest
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.sha }}
          release_name: Release ${{ github.sha }}
          body: |
            Release for commit ${{ github.sha }}
          draft: false
          prerelease: false

      - name: Upload Linux Artifacts
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ needs.linux-build.outputs.upload-artifacts-linux }}
          asset_name: "Linux_Build_${{ github.sha }}.zip"
          asset_content_type: application/zip

      - name: Upload Windows Artifacts
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ needs.build-windows.outputs.upload-artifacts-windows }}
          asset_name: "Windows_Build_${{ github.sha }}.zip"
          asset_content_type: application/zip
